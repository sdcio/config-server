/*
Copyright 2024 Nokia.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/
// Code generated by lister-gen. DO NOT EDIT.

package v1alpha1

import (
	configv1alpha1 "github.com/sdcio/config-server/apis/config/v1alpha1"
	labels "k8s.io/apimachinery/pkg/labels"
	listers "k8s.io/client-go/listers"
	cache "k8s.io/client-go/tools/cache"
)

// ConfigLister helps list Configs.
// All objects returned here must be treated as read-only.
type ConfigLister interface {
	// List lists all Configs in the indexer.
	// Objects returned here must be treated as read-only.
	List(selector labels.Selector) (ret []*configv1alpha1.Config, err error)
	// Configs returns an object that can list and get Configs.
	Configs(namespace string) ConfigNamespaceLister
	ConfigListerExpansion
}

// configLister implements the ConfigLister interface.
type configLister struct {
	listers.ResourceIndexer[*configv1alpha1.Config]
}

// NewConfigLister returns a new ConfigLister.
func NewConfigLister(indexer cache.Indexer) ConfigLister {
	return &configLister{listers.New[*configv1alpha1.Config](indexer, configv1alpha1.Resource("config"))}
}

// Configs returns an object that can list and get Configs.
func (s *configLister) Configs(namespace string) ConfigNamespaceLister {
	return configNamespaceLister{listers.NewNamespaced[*configv1alpha1.Config](s.ResourceIndexer, namespace)}
}

// ConfigNamespaceLister helps list and get Configs.
// All objects returned here must be treated as read-only.
type ConfigNamespaceLister interface {
	// List lists all Configs in the indexer for a given namespace.
	// Objects returned here must be treated as read-only.
	List(selector labels.Selector) (ret []*configv1alpha1.Config, err error)
	// Get retrieves the Config from the indexer for a given namespace and name.
	// Objects returned here must be treated as read-only.
	Get(name string) (*configv1alpha1.Config, error)
	ConfigNamespaceListerExpansion
}

// configNamespaceLister implements the ConfigNamespaceLister
// interface.
type configNamespaceLister struct {
	listers.ResourceIndexer[*configv1alpha1.Config]
}
