/*
Copyright 2024 Nokia.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/
// Code generated by lister-gen. DO NOT EDIT.

package v1alpha1

import (
	v1alpha1 "github.com/sdcio/config-server/apis/inv/v1alpha1"
	"k8s.io/apimachinery/pkg/labels"
	"k8s.io/client-go/listers"
	"k8s.io/client-go/tools/cache"
)

// WorkspaceLister helps list Workspaces.
// All objects returned here must be treated as read-only.
type WorkspaceLister interface {
	// List lists all Workspaces in the indexer.
	// Objects returned here must be treated as read-only.
	List(selector labels.Selector) (ret []*v1alpha1.Workspace, err error)
	// Workspaces returns an object that can list and get Workspaces.
	Workspaces(namespace string) WorkspaceNamespaceLister
	WorkspaceListerExpansion
}

// workspaceLister implements the WorkspaceLister interface.
type workspaceLister struct {
	listers.ResourceIndexer[*v1alpha1.Workspace]
}

// NewWorkspaceLister returns a new WorkspaceLister.
func NewWorkspaceLister(indexer cache.Indexer) WorkspaceLister {
	return &workspaceLister{listers.New[*v1alpha1.Workspace](indexer, v1alpha1.Resource("workspace"))}
}

// Workspaces returns an object that can list and get Workspaces.
func (s *workspaceLister) Workspaces(namespace string) WorkspaceNamespaceLister {
	return workspaceNamespaceLister{listers.NewNamespaced[*v1alpha1.Workspace](s.ResourceIndexer, namespace)}
}

// WorkspaceNamespaceLister helps list and get Workspaces.
// All objects returned here must be treated as read-only.
type WorkspaceNamespaceLister interface {
	// List lists all Workspaces in the indexer for a given namespace.
	// Objects returned here must be treated as read-only.
	List(selector labels.Selector) (ret []*v1alpha1.Workspace, err error)
	// Get retrieves the Workspace from the indexer for a given namespace and name.
	// Objects returned here must be treated as read-only.
	Get(name string) (*v1alpha1.Workspace, error)
	WorkspaceNamespaceListerExpansion
}

// workspaceNamespaceLister implements the WorkspaceNamespaceLister
// interface.
type workspaceNamespaceLister struct {
	listers.ResourceIndexer[*v1alpha1.Workspace]
}
